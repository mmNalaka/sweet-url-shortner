definitions:
  v1.CreateLinkRequest:
    properties:
      url:
        example: https://www.google.com
        type: string
    required:
    - url
    type: object
  v1.CreateLinkResponse:
    properties:
      code:
        type: integer
      data:
        $ref: '#/definitions/v1.CreateLinkResponseData'
      message:
        type: string
    type: object
  v1.CreateLinkResponseData:
    properties:
      shortLink:
        type: string
    type: object
  v1.GetProfileResponse:
    properties:
      code:
        type: integer
      data:
        $ref: '#/definitions/v1.GetProfileResponseData'
      message:
        type: string
    type: object
  v1.GetProfileResponseData:
    properties:
      nickname:
        example: alan
        type: string
      userId:
        type: string
    type: object
  v1.LoginRequest:
    properties:
      email:
        example: 1234@gmail.com
        type: string
      password:
        example: "123456"
        type: string
    required:
    - email
    - password
    type: object
  v1.LoginResponse:
    properties:
      code:
        type: integer
      data:
        $ref: '#/definitions/v1.LoginResponseData'
      message:
        type: string
    type: object
  v1.LoginResponseData:
    properties:
      accessToken:
        type: string
    type: object
  v1.RegisterRequest:
    properties:
      email:
        example: 1234@gmail.com
        type: string
      password:
        example: "123456"
        type: string
    required:
    - email
    - password
    type: object
  v1.Response:
    properties:
      code:
        type: integer
      data: {}
      message:
        type: string
    type: object
host: localhost:8000
info:
  contact: {}
  description: Simple URL shortener service API written in Go with Gin
  license:
    name: Apache 2.0
  title: Sweet API
  version: 1.0.0
paths:
  /link:
    post:
      consumes:
      - application/json
      parameters:
      - description: params
        in: body
        name: request
        required: true
        schema:
          $ref: '#/definitions/v1.CreateLinkRequest'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/v1.CreateLinkResponse'
      summary: Create a link
      tags:
      - Link module
  /login:
    post:
      consumes:
      - application/json
      parameters:
      - description: params
        in: body
        name: request
        required: true
        schema:
          $ref: '#/definitions/v1.LoginRequest'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/v1.LoginResponse'
      summary: Account login
      tags:
      - User module
  /register:
    post:
      consumes:
      - application/json
      description: Currently only supports email login
      parameters:
      - description: params
        in: body
        name: request
        required: true
        schema:
          $ref: '#/definitions/v1.RegisterRequest'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/v1.Response'
      summary: User registration
      tags:
      - User module
  /user:
    get:
      consumes:
      - application/json
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/v1.GetProfileResponse'
      security:
      - Bearer: []
      summary: Get user profile
      tags:
      - User module
securityDefinitions:
  Bearer:
    in: header
    name: Authorization
    type: apiKey
swagger: "2.0"
